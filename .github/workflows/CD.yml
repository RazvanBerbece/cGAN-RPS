# Workflow to automate CD

name: CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch

  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      working-directory: ./server

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install the required libs to deploy the app
      - name: Build Flask Server
        run: |
          pip install -r server/requirements.txt
          python3 -m venv env
          source env/bin/activate
        
      # Deploy Flask Server Docker image to Heroku
      - name: Deploy to Heroku
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "cgan-rps" 
          heroku_email: "sc19rab@leeds.ac.uk"
          usedocker: true
        working-directory: ${{ env.working-directory }}
